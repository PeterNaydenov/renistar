---
import General     from '../../layouts/General.astro'
import galleryList from './_gallery-list.json'

import fsbox from 'fs-toolbox'
import askForPromise from 'ask-for-promise'



export async function getStaticPaths () {
    const waitScanning = askForPromise ();
    fsbox.scan ( './public/gallery-icons', (err,r) => {
                  if ( err ) console.log ( err )
                  fsbox.keep ( 'jpg', { by: 'extension'}, (err,r) => waitScanning.done ( r ))
          });
    
    return await waitScanning.promise
                            .then ( scannedIcons => {
                                            return galleryList.map ( ({slug,title,description,foldername}) => {
                                                                    const list = scannedIcons.map ( item => {
                                                                                                      const 
                                                                                                            name = item.split('/').pop ()
                                                                                                          , path = item.split('/').slice(3).join('/')
                                                                                                          ;
                                                                                                      return {
                                                                                                                  icon : name
                                                                                                                , src  : path
                                                                                                                , keep : item.includes ( foldername )
                                                                                                      }
                                                                                          })
                                                                                  .filter ( item => item.keep );
                                                                  
                                                                    return {
                                                                                params : { slug }
                                                                              , props : { 
                                                                                          title, 
                                                                                          description, 
                                                                                          foldername, 
                                                                                          list
                                                                                      }
                                                                          }
                                                      }) // galleryList.map
                                }) // then waitScanning
} // getStaticPaths func.

const { title, description, foldername, list } = Astro.props;
---

<General>
<div class="wrapper galleries">
    <p class="crumbs"> <a href="javascript:history.back()">назад</a></p>

    <h2>{title}</h2>
				<div id="img">
                    { list.map ( item => (<a href="" data-href={`/gallery-images/${foldername}/${item.icon}`} rel="gallery"><img src={`/gallery-icons/${item.src}`} alt="photo" /></a> ))}
				</div>
				
				<div class="br">&nbsp;</div>
				<p>{description}</p>



<link rel="stylesheet" type="text/css" href="/js/fancybox/jquery.fancybox-1.3.4.css" media="screen" />
<script src="/js/jquery-1.4.3.min.js" type="text/javascript"></script>
<script src="/js/fancybox/jquery.fancybox-1.3.4.js" type="text/javascript"></script>
<script src="/js/fancybox/jquery.mousewheel-3.0.4.pack.js" type="text/javascript"></script>
<script type="text/javascript">
    $("a[rel=gallery]").fancybox({				
                    'transitionIn'	: 'elastic',
                    'transitionOut'	: 'none'
                });
</script>
</div>
</General>


